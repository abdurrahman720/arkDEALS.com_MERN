{"ast":null,"code":"var _s = $RefreshSig$();\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardError, setCardError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const card = elements.getElement(CardElement);\n    if (card === null) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card\n    });\n    if (error) {\n      setCardError(error.message);\n    } else {\n      setCardError('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(CheckoutForm, \"/BYFOAYqO8aLZq3mte9rPN4RMuU=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","React","useState","CheckoutForm","stripe","elements","cardError","setCardError","handleSubmit","e","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","message"],"sources":["/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/src/Pages/Dashboard/Buyer/Payment/CheckoutForm.jsx"],"sourcesContent":["import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState } from 'react';\n\nconst CheckoutForm = () => {\n    const stripe = useStripe()\n    const elements = useElements();\n    const [cardError, setCardError] = useState('')\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!stripe || !elements) {\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n\n        if (card === null) {\n            return;\n        }\n\n        const {error,paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card\n        })\n\n        if (error) {\n            setCardError(error.message)\n\n        }\n        else {\n            setCardError('')\n        }\n\n    }\n    return (\n        <>\n        \n        </>\n    );\n};\n\nexport default CheckoutForm;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACN,MAAM,IAAI,CAACC,QAAQ,EAAE;MACtB;IACJ;IAEA,MAAMM,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACd,WAAW,CAAC;IAE7C,IAAIa,IAAI,KAAK,IAAI,EAAE;MACf;IACJ;IAEA,MAAM;MAACE,KAAK;MAACC;IAAc,CAAC,GAAG,MAAMV,MAAM,CAACW,mBAAmB,CAAC;MAC5DC,IAAI,EAAE,MAAM;MACZL;IACJ,CAAC,CAAC;IAEF,IAAIE,KAAK,EAAE;MACPN,YAAY,CAACM,KAAK,CAACI,OAAO,CAAC;IAE/B,CAAC,MACI;MACDV,YAAY,CAAC,EAAE,CAAC;IACpB;EAEJ,CAAC;EACD,oBACI,qCAEG;AAEX,CAAC;AAAC,GAnCIJ,YAAY;EAAA,QACCH,SAAS,EACPD,WAAW;AAAA;AAAA,KAF1BI,YAAY;AAqClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}