{"ast":null,"code":"import _slicedToArray from\"/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{createContext}from\"react\";import{getAuth}from'firebase/auth';import{app}from\"./Firebase.config\";import{createUserWithEmailAndPassword,GoogleAuthProvider,onAuthStateChanged,signInWithEmailAndPassword,signInWithPopup,signOut,updateProfile}from'firebase/auth';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext();var auth=getAuth(app);var googleProvider=new GoogleAuthProvider();var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],isLoading=_useState4[1];var googleSign=function googleSign(){isLoading(true);return signInWithPopup(auth,googleProvider);};var logOut=function logOut(){return signOut(auth);};var emailSignIn=function emailSignIn(email,password){isLoading(true);return signInWithEmailAndPassword(auth,email,password);};var emailSignUp=function emailSignUp(email,password){isLoading(true);return createUserWithEmailAndPassword(auth,email,password);};var updateName=function updateName(name){return updateProfile(auth.currentUser,{displayName:name});};useEffect(function(){var unsubscribe=onAuthStateChanged(auth,function(currentUser){setUser(currentUser);console.log('current user:',currentUser);isLoading(false);});return function(){unsubscribe();};},[]);var authInfo={user:user,loading:loading,googleSign:googleSign,logOut:logOut,emailSignIn:emailSignIn,emailSignUp:emailSignUp,updateName:updateName,isLoading:isLoading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:authInfo,children:children});};export default AuthProvider;","map":{"version":3,"names":["React","useState","useEffect","createContext","getAuth","app","createUserWithEmailAndPassword","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","AuthContext","auth","googleProvider","AuthProvider","children","user","setUser","loading","isLoading","googleSign","logOut","emailSignIn","email","password","emailSignUp","updateName","name","currentUser","displayName","unsubscribe","console","log","authInfo"],"sources":["/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/src/Context/AuthProvider.jsx"],"sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { createContext } from \"react\";\nimport { getAuth } from 'firebase/auth';\nimport { app } from \"./Firebase.config\";\nimport {createUserWithEmailAndPassword,  GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile} from 'firebase/auth'\n\nexport const AuthContext = createContext();\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst AuthProvider = ({ children }) => {\n\n    const [user, setUser] = useState(null);\n    const [loading, isLoading] = useState(true);\n\n    const googleSign = () => {\n        isLoading(true);\n        return signInWithPopup(auth, googleProvider);\n    }\n\n    const logOut = () => {\n        return signOut(auth);\n    }\n\n    const emailSignIn = (email, password) => {\n        isLoading(true);\n        return signInWithEmailAndPassword(auth, email, password);\n    }\n\n    const emailSignUp = (email, password) => {\n        isLoading(true);\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n    const updateName = (name) => {\n        return updateProfile(auth.currentUser, { displayName: name })\n    }\n    \n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n            setUser(currentUser);\n            console.log('current user:', currentUser);\n           isLoading(false);\n       })\n        return () => {\n            unsubscribe();\n        }\n    },[])\n\n    const authInfo = {user,loading,googleSign,logOut,emailSignIn,emailSignUp,updateName,isLoading}\n\n\n    return (\n        <AuthContext.Provider value={authInfo}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthProvider;\n\n"],"mappings":"0JAAA,MAAOA,MAAK,EAAEC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAC/C,OAASC,aAAa,KAAQ,OAAO,CACrC,OAASC,OAAO,KAAQ,eAAe,CACvC,OAASC,GAAG,KAAQ,mBAAmB,CACvC,OAAQC,8BAA8B,CAAGC,kBAAkB,CAAEC,kBAAkB,CAAEC,0BAA0B,CAAEC,eAAe,CAAEC,OAAO,CAAEC,aAAa,KAAO,eAAe,4CAE1K,MAAO,IAAMC,YAAW,cAAGV,aAAa,EAAE,CAC1C,GAAMW,KAAI,CAAGV,OAAO,CAACC,GAAG,CAAC,CACzB,GAAMU,eAAc,CAAG,GAAIR,mBAAkB,EAAE,CAE/C,GAAMS,aAAY,CAAG,QAAfA,aAAY,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CAE5B,cAAwBhB,QAAQ,CAAC,IAAI,CAAC,wCAA/BiB,IAAI,eAAEC,OAAO,eACpB,eAA6BlB,QAAQ,CAAC,IAAI,CAAC,yCAApCmB,OAAO,eAAEC,SAAS,eAEzB,GAAMC,WAAU,CAAG,QAAbA,WAAU,EAAS,CACrBD,SAAS,CAAC,IAAI,CAAC,CACf,MAAOX,gBAAe,CAACI,IAAI,CAAEC,cAAc,CAAC,CAChD,CAAC,CAED,GAAMQ,OAAM,CAAG,QAATA,OAAM,EAAS,CACjB,MAAOZ,QAAO,CAACG,IAAI,CAAC,CACxB,CAAC,CAED,GAAMU,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CACrCL,SAAS,CAAC,IAAI,CAAC,CACf,MAAOZ,2BAA0B,CAACK,IAAI,CAAEW,KAAK,CAAEC,QAAQ,CAAC,CAC5D,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIF,KAAK,CAAEC,QAAQ,CAAK,CACrCL,SAAS,CAAC,IAAI,CAAC,CACf,MAAOf,+BAA8B,CAACQ,IAAI,CAAEW,KAAK,CAAEC,QAAQ,CAAC,CAChE,CAAC,CACD,GAAME,WAAU,CAAG,QAAbA,WAAU,CAAIC,IAAI,CAAK,CACzB,MAAOjB,cAAa,CAACE,IAAI,CAACgB,WAAW,CAAE,CAAEC,WAAW,CAAEF,IAAK,CAAC,CAAC,CACjE,CAAC,CAED3B,SAAS,CAAC,UAAM,CACZ,GAAM8B,YAAW,CAAGxB,kBAAkB,CAACM,IAAI,CAAE,SAACgB,WAAW,CAAK,CAC1DX,OAAO,CAACW,WAAW,CAAC,CACpBG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEJ,WAAW,CAAC,CAC1CT,SAAS,CAAC,KAAK,CAAC,CACpB,CAAC,CAAC,CACD,MAAO,WAAM,CACTW,WAAW,EAAE,CACjB,CAAC,CACL,CAAC,CAAC,EAAE,CAAC,CAEL,GAAMG,SAAQ,CAAG,CAACjB,IAAI,CAAJA,IAAI,CAACE,OAAO,CAAPA,OAAO,CAACE,UAAU,CAAVA,UAAU,CAACC,MAAM,CAANA,MAAM,CAACC,WAAW,CAAXA,WAAW,CAACG,WAAW,CAAXA,WAAW,CAACC,UAAU,CAAVA,UAAU,CAACP,SAAS,CAATA,SAAS,CAAC,CAG9F,mBACI,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAEc,QAAS,UACjClB,QAAQ,EACU,CAE/B,CAAC,CAED,cAAeD,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}