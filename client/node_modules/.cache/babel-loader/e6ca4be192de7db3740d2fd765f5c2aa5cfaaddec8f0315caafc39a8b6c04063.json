{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/src/Pages/Dashboard/Admin/Allbuyer.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AllbuyerTable from \"../../../Components/AllbuyerTable\";\nimport ConfirmationModal from \"../../../Components/ConfirmationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Allbuyer = () => {\n  _s();\n  const {\n    data: buyers = [],\n    refetch\n  } = useQuery({\n    queryKey: [\"buyers\"],\n    queryFn: async () => {\n      const res = await fetch(`http://localhost:5001/allbuyers`, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`\n        }\n      });\n      const data = await res.json();\n      return data;\n    }\n  });\n  const [deletingBuyer, setDeletingBuyer] = useState(null);\n  const confirmationModal = user => {\n    setDeletingBuyer(user);\n  };\n  const closeModal = () => {\n    setDeletingBuyer(null);\n  };\n  const handleDelete = user => {\n    console.log(user);\n    fetch(`http://localhost:5001/buyer-orders-delete/${user === null || user === void 0 ? void 0 : user.email}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      fetch(`http://localhost:5001/user-delete/${user === null || user === void 0 ? void 0 : user.email}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        refetch();\n        toast.success(\"User has been deleted successfully\");\n        toast.warn(\"Don't forget to delete this user from Firebase!\");\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-base-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-xl\",\n        children: \"All Buyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table w-full \",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Seller Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: buyers.map((buyer, i) => /*#__PURE__*/_jsxDEV(AllbuyerTable, {\n              buyer: buyer,\n              confirmationModal: confirmationModal,\n              i: i\n            }, buyer._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), deletingBuyer && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      title: `Your are deleting ${deletingBuyer.name}`,\n      message: `Everything associated with this email: ${deletingBuyer.name}  will be deleted from database. \n          Since your are using firebase authentication, you must delete ${deletingBuyer.email} from there manually!`,\n      successAction: handleDelete,\n      successButtonName: \"Delete\",\n      modalData: deletingBuyer,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Allbuyer, \"d/U2vQK5jznokRKer2MT9vJPSDQ=\", false, function () {\n  return [useQuery];\n});\n_c = Allbuyer;\nexport default Allbuyer;\nvar _c;\n$RefreshReg$(_c, \"Allbuyer\");","map":{"version":3,"names":["useQuery","React","useState","toast","AllbuyerTable","ConfirmationModal","Allbuyer","data","buyers","refetch","queryKey","queryFn","res","fetch","headers","authorization","localStorage","getItem","json","deletingBuyer","setDeletingBuyer","confirmationModal","user","closeModal","handleDelete","console","log","email","method","then","success","warn","map","buyer","i","_id","name"],"sources":["/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/src/Pages/Dashboard/Admin/Allbuyer.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AllbuyerTable from \"../../../Components/AllbuyerTable\";\nimport ConfirmationModal from \"../../../Components/ConfirmationModal\";\n\nconst Allbuyer = () => {\n  const { data: buyers = [], refetch } = useQuery({\n    queryKey: [\"buyers\"],\n    queryFn: async () => {\n      const res = await fetch(`http://localhost:5001/allbuyers`, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`,\n        },\n      });\n      const data = await res.json();\n      return data;\n    },\n  });\n\n  const [deletingBuyer, setDeletingBuyer] = useState(null);\n\n  const confirmationModal = (user) => {\n    setDeletingBuyer(user);\n  };\n  const closeModal = () => {\n    setDeletingBuyer(null);\n  };\n\n  const handleDelete = (user) => {\n    console.log(user);\n    fetch(`http://localhost:5001/buyer-orders-delete/${user?.email}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        fetch(`http://localhost:5001/user-delete/${user?.email}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: `Bearer ${localStorage.getItem(\"arkDeals\")}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(data);\n            refetch();\n            toast.success(\"User has been deleted successfully\");\n            toast.warn(\"Don't forget to delete this user from Firebase!\");\n          });\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"bg-base-100\">\n        <h2 className=\"text-center text-xl\">All Buyer</h2>\n        <div className=\"overflow-x-auto w-full\">\n          <table className=\"table w-full \">\n            <thead>\n              <tr>\n                <th></th>\n                <th>Seller Name</th>\n                <th>Email</th>\n\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {buyers.map((buyer, i) => (\n                <AllbuyerTable\n                  key={buyer._id}\n                  buyer={buyer}\n                  confirmationModal={confirmationModal}\n                  i={i}\n                ></AllbuyerTable>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {deletingBuyer && (\n        <ConfirmationModal\n          title={`Your are deleting ${deletingBuyer.name}`}\n          message={`Everything associated with this email: ${deletingBuyer.name}  will be deleted from database. \n          Since your are using firebase authentication, you must delete ${deletingBuyer.email} from there manually!`}\n          successAction={handleDelete}\n          successButtonName=\"Delete\"\n          modalData={deletingBuyer}\n          closeModal={closeModal}\n        ></ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nexport default Allbuyer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}