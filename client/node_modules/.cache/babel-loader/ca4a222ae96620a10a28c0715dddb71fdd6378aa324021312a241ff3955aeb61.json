{"ast":null,"code":"import React,{useContext}from'react';import{Navigate,useLocation}from'react-router-dom';import Loader from'../Components/Loader';import{AuthContext}from'../Context/AuthProvider';import{jsx as _jsx}from\"react/jsx-runtime\";var PrivateRoute=function PrivateRoute(_ref){var children=_ref.children;var _useContext=useContext(AuthContext),user=_useContext.user,loading=_useContext.loading;var location=useLocation();if(loading){return/*#__PURE__*/_jsx(Loader,{});}if(user!==null&&user!==void 0&&user.email){return children;}return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location}});};export default PrivateRoute;","map":{"version":3,"names":["React","useContext","Navigate","useLocation","Loader","AuthContext","PrivateRoute","children","user","loading","location","email","from"],"sources":["/Users/abdurrahman/VsCode/WebDev/PGHERO/MileStone12/ark-deals-client/src/Routes/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport Loader from '../Components/Loader';\nimport { AuthContext } from '../Context/AuthProvider';\n\nconst PrivateRoute=({children}) => {\n    const { user, loading } = useContext(AuthContext);\n    const location = useLocation();\n\n\n    if (loading  ) {\n        return <Loader></Loader>\n    }\n\n    if (user?.email) {\n        return children\n    }\n\n    return <Navigate to='/login' state={{from:location}} ></Navigate>\n};\n\nexport default PrivateRoute;"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,MAAOC,OAAM,KAAM,sBAAsB,CACzC,OAASC,WAAW,KAAQ,yBAAyB,CAAC,2CAEtD,GAAMC,aAAY,CAAC,QAAbA,aAAY,MAAiB,IAAdC,SAAQ,MAARA,QAAQ,CACzB,gBAA0BN,UAAU,CAACI,WAAW,CAAC,CAAzCG,IAAI,aAAJA,IAAI,CAAEC,OAAO,aAAPA,OAAO,CACrB,GAAMC,SAAQ,CAAGP,WAAW,EAAE,CAG9B,GAAIM,OAAO,CAAI,CACX,mBAAO,KAAC,MAAM,IAAU,CAC5B,CAEA,GAAID,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEG,KAAK,CAAE,CACb,MAAOJ,SAAQ,CACnB,CAEA,mBAAO,KAAC,QAAQ,EAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAE,CAACK,IAAI,CAACF,QAAQ,CAAE,EAAa,CACrE,CAAC,CAED,cAAeJ,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}